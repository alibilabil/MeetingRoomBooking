#server.port: 8443
#server.ssl.key-store: keystore.p12
#server.ssl.key-store-password: 123456789
#server.ssl.keyStoreType: PKCS12
#server.ssl.keyAlias: tomcat
#



# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
spring.datasource.url = jdbc:mysql://localhost:3306/meetingroombooking
spring.datasource.username = root
spring.datasource.password = 
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


    spring.jpa.generate-ddl = true
    
    spring.jpa.properties.hibernate.current_session_context_class = org.springframework.orm.hibernate4.SpringSessionContext

    # and in order for these guys to work you have to know
    # spring.datasource.max-active=100
    # spring.datasource.max-idle=8
    # spring.datasource.min-idle=8
    # your dbcp and look for documentation
    # below is the example for Tomcat
    spring.datasource.tomcat.max-active=100
    spring.datasource.tomcat.max-idle=8
    spring.datasource.tomcat.min-idle=8

    # make sure you check out the logging
    # this is IMPORTANT to see that your 
    # properties were ACTUALLY picked up
    logging.level.org.springframework.web = DEBUG
    logging.level.org.hibernate = DEBUG
